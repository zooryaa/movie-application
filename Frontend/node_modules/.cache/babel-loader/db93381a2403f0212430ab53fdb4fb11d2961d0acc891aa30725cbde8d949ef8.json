{"ast":null,"code":"import { defaultAxiosInstance } from \"./Api\";\nexport async function getMovie() {\n  console.log(defaultAxiosInstance.get(\"movies/\"), \"ksjhdsdgfs\");\n  const data = await defaultAxiosInstance.get(\"movies/\", {\n    auth: {\n      username: \"lekhana\",\n      password: \"21\"\n    }\n  }).catch(error => {\n    throw error;\n  });\n  console.log(\"after fetch\");\n  console.log(data);\n  return data[\"data\"];\n}\nexport async function getMovieById(id) {\n  const data = await defaultAxiosInstance.get(\"/movies/\" + id, {\n    auth: {\n      username: \"lekhana\",\n      password: \"21\"\n    }\n  });\n  console.log(\"after fetch\");\n  return data[\"data\"];\n}\nexport async function addMovie(params) {\n  const res = await defaultAxiosInstance.post(\"/movies\", {\n    movieName: params.movieName,\n    moviePrice: params.moviePrice\n  }, {\n    auth: {\n      username: \"lekhana\",\n      password: \"21\"\n    }\n  });\n  if (res && res.status === 200) {\n    console.log(\"movie successfully created\");\n  }\n}\nexport async function updateMovie(params) {\n  const res = await defaultAxiosInstance.put(\"/movies/\" + params.movieId, {\n    movieName: params.movieName,\n    movieGenre: params.movieGenre,\n    moviePrice: params.moviePrice\n  }, {\n    auth: {\n      username: \"lekhana\",\n      password: \"21\"\n    }\n  });\n  if (res && res.status === 200) {\n    console.log(\"movie successfully created\");\n  }\n}\nexport async function deleteMovieById(id) {\n  const res = await defaultAxiosInstance.delete(\"/movies/\" + id, {\n    auth: {\n      username: \"lekhana\",\n      password: \"21\"\n    }\n  }).catch(error => {\n    throw error;\n  });\n  return res.data;\n}","map":{"version":3,"names":["defaultAxiosInstance","getMovie","console","log","get","data","auth","username","password","catch","error","getMovieById","id","addMovie","params","res","post","movieName","moviePrice","status","updateMovie","put","movieId","movieGenre","deleteMovieById","delete"],"sources":["C:/School/M165/PLJ_Lekhana/Frontend/src/MovieService.ts"],"sourcesContent":["import axios, { AxiosInstance } from \"axios\";\r\nimport { isArrowFunction } from \"typescript\";\r\n\r\nimport { defaultAxiosInstance } from \"./Api\";\r\n\r\ntype Movie = {\r\n  movieId: string;\r\n  movieName: string;\r\n  movieGenre: string;\r\n  moviePrice: string;\r\n};\r\n\r\nexport async function getMovie() {\r\n  console.log(defaultAxiosInstance.get(\"movies/\"), \"ksjhdsdgfs\");\r\n  const data = await defaultAxiosInstance\r\n    .get(\"movies/\", {\r\n      auth: {\r\n        username: \"lekhana\",\r\n        password: \"21\",\r\n      },\r\n    }) \r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  console.log(\"after fetch\");\r\n  console.log(data);\r\n  return data[\"data\"];\r\n}\r\n\r\nexport async function getMovieById(id: string) {\r\n  const data = await defaultAxiosInstance.get(\"/movies/\" + id, {\r\n    auth: {\r\n      username: \"lekhana\",\r\n      password: \"21\",\r\n    },\r\n  });\r\n  console.log(\"after fetch\");\r\n  return data[\"data\"];\r\n}\r\n\r\nexport async function addMovie(params: Movie) {\r\n  const res = await defaultAxiosInstance.post(\r\n    \"/movies\",\r\n    {\r\n      movieName: params.movieName,\r\n      moviePrice: params.moviePrice,\r\n    },\r\n    {\r\n      auth: {\r\n        username: \"lekhana\",\r\n        password: \"21\",\r\n      },\r\n    }\r\n  );\r\n  if (res && res.status === 200) {\r\n    console.log(\"movie successfully created\");\r\n  }\r\n}\r\nexport async function updateMovie(params: Movie) {\r\n  const res = await defaultAxiosInstance.put(\r\n    \"/movies/\" + params.movieId,\r\n    {\r\n      movieName: params.movieName,\r\n      movieGenre: params.movieGenre,\r\n      moviePrice: params.moviePrice,\r\n    },\r\n    {\r\n      auth: {\r\n        username: \"lekhana\",\r\n        password: \"21\",\r\n      },\r\n    }\r\n  );\r\n  if (res && res.status === 200) {\r\n    console.log(\"movie successfully created\");\r\n  }\r\n}\r\nexport async function deleteMovieById(id: string) {\r\n  const res = await defaultAxiosInstance\r\n    .delete(\"/movies/\" + id, {\r\n      auth: {\r\n        username: \"lekhana\",\r\n        password: \"21\",\r\n      },\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  return res.data;\r\n}\r\n"],"mappings":"AAGA,SAASA,oBAAoB,QAAQ,OAAO;AAS5C,OAAO,eAAeC,QAAQ,GAAG;EAC/BC,OAAO,CAACC,GAAG,CAACH,oBAAoB,CAACI,GAAG,CAAC,SAAS,CAAC,EAAE,YAAY,CAAC;EAC9D,MAAMC,IAAI,GAAG,MAAML,oBAAoB,CACpCI,GAAG,CAAC,SAAS,EAAE;IACdE,IAAI,EAAE;MACJC,QAAQ,EAAE,SAAS;MACnBC,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChB,MAAMA,KAAK;EACb,CAAC,CAAC;EACJR,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1BD,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;EACjB,OAAOA,IAAI,CAAC,MAAM,CAAC;AACrB;AAEA,OAAO,eAAeM,YAAY,CAACC,EAAU,EAAE;EAC7C,MAAMP,IAAI,GAAG,MAAML,oBAAoB,CAACI,GAAG,CAAC,UAAU,GAAGQ,EAAE,EAAE;IAC3DN,IAAI,EAAE;MACJC,QAAQ,EAAE,SAAS;MACnBC,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC;EACFN,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1B,OAAOE,IAAI,CAAC,MAAM,CAAC;AACrB;AAEA,OAAO,eAAeQ,QAAQ,CAACC,MAAa,EAAE;EAC5C,MAAMC,GAAG,GAAG,MAAMf,oBAAoB,CAACgB,IAAI,CACzC,SAAS,EACT;IACEC,SAAS,EAAEH,MAAM,CAACG,SAAS;IAC3BC,UAAU,EAAEJ,MAAM,CAACI;EACrB,CAAC,EACD;IACEZ,IAAI,EAAE;MACJC,QAAQ,EAAE,SAAS;MACnBC,QAAQ,EAAE;IACZ;EACF,CAAC,CACF;EACD,IAAIO,GAAG,IAAIA,GAAG,CAACI,MAAM,KAAK,GAAG,EAAE;IAC7BjB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAC3C;AACF;AACA,OAAO,eAAeiB,WAAW,CAACN,MAAa,EAAE;EAC/C,MAAMC,GAAG,GAAG,MAAMf,oBAAoB,CAACqB,GAAG,CACxC,UAAU,GAAGP,MAAM,CAACQ,OAAO,EAC3B;IACEL,SAAS,EAAEH,MAAM,CAACG,SAAS;IAC3BM,UAAU,EAAET,MAAM,CAACS,UAAU;IAC7BL,UAAU,EAAEJ,MAAM,CAACI;EACrB,CAAC,EACD;IACEZ,IAAI,EAAE;MACJC,QAAQ,EAAE,SAAS;MACnBC,QAAQ,EAAE;IACZ;EACF,CAAC,CACF;EACD,IAAIO,GAAG,IAAIA,GAAG,CAACI,MAAM,KAAK,GAAG,EAAE;IAC7BjB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAC3C;AACF;AACA,OAAO,eAAeqB,eAAe,CAACZ,EAAU,EAAE;EAChD,MAAMG,GAAG,GAAG,MAAMf,oBAAoB,CACnCyB,MAAM,CAAC,UAAU,GAAGb,EAAE,EAAE;IACvBN,IAAI,EAAE;MACJC,QAAQ,EAAE,SAAS;MACnBC,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChB,MAAMA,KAAK;EACb,CAAC,CAAC;EACJ,OAAOK,GAAG,CAACV,IAAI;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}